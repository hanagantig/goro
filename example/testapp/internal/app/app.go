// Code generated by goro; DO NOT EDIT.

package app

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the goro commands

import (
	"database/sql"
	"errors"
	"github.com/jmoiron/sqlx"
	"net/http"
	"sync"

	"context"

	"testapp/internal/config"
)

type Logger interface {
	Debug(string, ...any)
	DebugContext(context.Context, string, ...any)
	Info(string, ...any)
	InfoContext(context.Context, string, ...any)
	Error(string, ...any)
	ErrorContext(context.Context, string, ...any)
	Warn(string, ...any)
	WarnContext(context.Context, string, ...any)
}

type App struct {
	cfg config.Config

	c     *Container
	cOnce *sync.Once

	//hc     health.Checker
	//hcOnce *sync.Once

	mysql  *sql.DB
	mysqlx *sqlx.DB
	pgsqlx *sqlx.DB
	http   *http.Client

	logger Logger
}

var a *App

func NewApp(configPath string) (*App, error) {
	cfg, err := config.NewConfig(configPath)
	if err != nil {
		return nil, err
	}

	app := &App{
		cOnce: &sync.Once{},
		//hcOnce: &sync.Once{},
		cfg: cfg,
	}

	//goro:init logger
	app.initLogger()

	//goro:init healthChecker
	//app.initHealthChecker()

	mysqlConnect, err := app.newMySQLConnect(cfg.MainDB)
	if err != nil {
		return nil, err
	}
	app.mysql = mysqlConnect
	mysqlxConn, err := app.newMySQLxConnect(cfg.MainDB)
	if err != nil {
		return nil, err
	}
	app.mysqlx = mysqlxConn
	pgSqlxConn, err := app.newPgSqlxConnect(cfg.MainDB)
	if err != nil {
		return nil, err
	}
	app.pgsqlx = pgSqlxConn

	httpClient := app.newHttpClient()
	app.http = httpClient

	//goro:init dependencies
	app.c = NewContainer(app.mysql, app.mysqlx, app.pgsqlx, app.http)

	return app, nil
}

func SetGlobalApp(app *App) {
	a = app
}

func GetGlobalApp() (*App, error) {
	if a == nil {
		return nil, errors.New("global app is not initialized")
	}

	return a, nil
}
