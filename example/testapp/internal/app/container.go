// Code generated by goro; DO NOT EDIT.

package app

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the goro commands

import (
	"database/sql"
	"github.com/jmoiron/sqlx"
	"net/http"

	"testapp/internal/usecase"

	"testapp/internal/service/myservice"
	"testapp/internal/service/orderservice"
	"testapp/internal/service/pingpong"

	"testapp/internal/adapter/httprepo/ordersrepo"
	"testapp/internal/adapter/mysqlrepo/myrepo"
	"testapp/internal/adapter/mysqlxrepo/clientrepo"
	"testapp/internal/adapter/pgsqlxrepo/userrepo"
)

type Container struct {
	mysql  *sql.DB
	mysqlx *sqlx.DB
	pgsqlx *sqlx.DB
	http   *http.Client

	deps map[string]interface{}
}

func NewContainer(mysqlConnect *sql.DB, mysqlxConn *sqlx.DB, pgSqlxConn *sqlx.DB, httpClient *http.Client) *Container {

	return &Container{
		mysql:  mysqlConnect,
		mysqlx: mysqlxConn,
		pgsqlx: pgSqlxConn,
		http:   httpClient,

		deps: make(map[string]interface{}),
	}
}

func (c *Container) GetUseCase() *usecase.UseCase {

	return usecase.NewUseCase(c.getMyService(), c.getPingPong())
}

func (c *Container) getMysql() *sql.DB {
	return c.mysql
}

func (c *Container) getMysqlx() *sqlx.DB {
	return c.mysqlx
}

func (c *Container) getPgsqlx() *sqlx.DB {
	return c.pgsqlx
}

func (c *Container) getHttp() *http.Client {
	return c.http
}

func (c *Container) getMyService() *myservice.Service {

	return myservice.NewService(c.getMyRepo())
}

func (c *Container) getPingPong() *pingpong.Service {

	return pingpong.NewService(c.getMyRepo())
}

func (c *Container) getOrderService() *orderservice.Service {

	return orderservice.NewService(c.getOrdersRepo())
}

func (c *Container) getMyRepo() *myrepo.Repository {

	return myrepo.NewRepository(c.getMysql())
}

func (c *Container) getClientRepo() *clientrepo.Repository {

	return clientrepo.NewRepository(c.getMysqlx())
}

func (c *Container) getUserRepo() *userrepo.Repository {

	return userrepo.NewRepository(c.getPgsqlx())
}

func (c *Container) getOrdersRepo() *ordersrepo.Repository {

	return ordersrepo.NewRepository(c.getHttp())
}
