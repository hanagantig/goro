// Code generated by goro; DO NOT EDIT.

package app

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the goro commands

import (
	"database/sql"
	"github.com/jmoiron/sqlx"
	"net/http"

	"testapp/internal/usecase"

	"testapp/internal/service/clientservice"
	"testapp/internal/service/myservice"
	"testapp/internal/service/pingpong"
	"testapp/internal/service/productservice"

	"testapp/internal/adapter/httprepo/bankapi"
	"testapp/internal/adapter/httprepo/productapi"
	"testapp/internal/adapter/mysqlrepo/myrepo"
	"testapp/internal/adapter/mysqlxrepo/clientrepo"
	"testapp/internal/adapter/pgsqlxrepo/ordersrepo"
)

type Container struct {
	mysql      *sql.DB
	mysqlx     *sqlx.DB
	pgsqlx     *sqlx.DB
	httpClient *http.Client

	deps map[string]interface{}
}

func NewContainer(mysqlConnect *sql.DB, mysqlxConn *sqlx.DB, pgSqlxConn *sqlx.DB, httpClient *http.Client) *Container {

	return &Container{
		mysql:      mysqlConnect,
		mysqlx:     mysqlxConn,
		pgsqlx:     pgSqlxConn,
		httpClient: httpClient,

		deps: make(map[string]interface{}),
	}
}

func (c *Container) GetUseCase() *usecase.UseCase {

	return usecase.NewUseCase(c.getMyService(), c.getPingPong(), c.getClientService())
}

func (c *Container) getMysql() *sql.DB {
	return c.mysql
}

func (c *Container) getMysqlx() *sqlx.DB {
	return c.mysqlx
}

func (c *Container) getPgsqlx() *sqlx.DB {
	return c.pgsqlx
}

func (c *Container) getHttpClient() *http.Client {
	return c.httpClient
}

func (c *Container) getMyService() *myservice.Service {

	return myservice.NewService(c.getBankApi(), c.getMyRepo())
}

func (c *Container) getProductService() *productservice.Service {

	return productservice.NewService(c.getProductApi())
}

func (c *Container) getClientService() *clientservice.Service {

	return clientservice.NewService(c.getClientRepo())
}

func (c *Container) getPingPong() *pingpong.Service {

	return pingpong.NewService(c.getMyRepo(), c.getOrdersRepo())
}

func (c *Container) getMyRepo() *myrepo.Repository {

	return myrepo.NewRepository(c.getMysql())
}

func (c *Container) getClientRepo() *clientrepo.Repository {

	return clientrepo.NewRepository(c.getMysqlx())
}

func (c *Container) getOrdersRepo() *ordersrepo.Repository {

	return ordersrepo.NewRepository(c.getPgsqlx())
}

func (c *Container) getBankApi() *bankapi.Repository {

	return bankapi.NewRepository(c.getHttpClient())
}

func (c *Container) getProductApi() *productapi.Repository {

	return productapi.NewRepository(c.getHttpClient())
}
