// Code generated by goro; DO NOT EDIT.

package app

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the goro commands

import (
	"{{ .App.Module }}/internal/handler/http"
	"{{ .App.Module }}/internal/handler/http/api/v1"
	"github.com/hanagantig/gracy"
	"fmt"
  {{ .Logger.GetImportPackage }}
  {{ renderImports "storage.http" "build" . }}
)

func (a *App) StartHTTPServer() error {
	go func() {
		a.startHTTPServer()
	}()

	err := gracy.Wait()
	if err != nil {
    {{ .Logger.GetFailStopHTTPServerMessage }}
		return err
	}
	a.logger.Info("server gracefully stopped")
	return nil
}

func (a *App) startHTTPServer() {
	handler := v1.NewHandler(a.c.GetUseCase(), a.logger)

	router := http.NewRouter()
	router.
		//WithMetrics().
		//WithHealthChecks(app.hc).
		WithSwagger().
		WithHandler(handler, a.logger).
		WithProfiler()

	srv := http.NewServer(a.cfg.HTTP)
	srv.RegisterRoutes(router)

	gracy.AddCallback(func() error {
		return srv.Stop()
	})

	a.logger.Info(fmt.Sprintf("starting HTTP server at %s:%s", a.cfg.HTTP.Host, a.cfg.HTTP.Port))
	err := srv.Start()
	if err != nil {
    {{ .Logger.GetFailStartHTTPServerMessage }}
	}
}

{{ renderBuild "storage.http" . }}
