// Code generated by goro; DO NOT EDIT.

package app

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the goro commands

import (
    {{ renderImports "storage" "definition" "all" .Chunks }}

    "{{ $.App.Module }}/internal/usecase"

    {{if .Services}}
        {{range .Services -}}
            "{{ $.App.Module }}/internal/service/{{.GetPkgName}}"
        {{end -}}
    {{end}}

    {{if .Adapters}}
        {{range .Adapters -}}
            "{{ $.App.Module }}/internal/adapter/{{.Storage.GetFolderName}}/{{.GetPkgName}}"
        {{end -}}
    {{end}}
)

type Container struct {
	{{ renderDefinition "storage" .Chunks }}

	deps    map[string]interface{}
}

func NewContainer({{ renderArgs "storage" .Chunks }}) *Container {
	
    return &Container{
		{{ renderStructPopulation "storage" .Chunks }}
		deps:    make(map[string]interface{}),
	}
}

func (c *Container) GetUseCase() *usecase.UseCase {

    return usecase.{{$.UseCase.GetConstructorName}}({{range $p := $.UseCase.Deps}} c.get{{toCamelCase $p}}(), {{end}})
}

{{range .Chunks}}
    {{if eq .Scope `storage`}}
        {{if eq .Name "http"}}
            func (c *Container) get{{toCamelCase .Name}}Client() {{.ReturnType}} {
                return c.{{.Name}}Client
            }
        {{else}}
            func (c *Container) get{{toCamelCase .Name}}() {{.ReturnType}} {
                return c.{{.Name}}
            }
        {{end}}
    {{end}}
{{end}}

{{if .Services}}
    {{range $key, $val := .Services}}
        func (c *Container) get{{toCamelCase $val.Name }}() *{{$val.GetPkgName}}.Service {
            
            return {{$val.GetPkgName}}.{{ $val.GetConstructorName }} ({{range $p := $val.Deps}} c.get{{toCamelCase $p}}(), {{end}})
        }
    {{end}}
{{end}}

{{if .Adapters}}
    {{range $key, $val := .Adapters}}
        {{if contains $val.Storage.String "http"}}
            func (c *Container) get{{toCamelCase $val.Name}}() *{{$val.GetPkgName}}.Repository {

                return {{$val.GetPkgName}}.{{ $val.GetConstructorName }} (c.get{{toCamelCase $val.Storage.String}}Client())
            }
        {{else}}
            func (c *Container) get{{toCamelCase $val.Name}}() *{{$val.GetPkgName}}.Repository {

                return {{$val.GetPkgName}}.{{ $val.GetConstructorName }} (c.get{{toCamelCase $val.Storage.String}}())
            }
        {{end}}
    {{end}}
{{end}}